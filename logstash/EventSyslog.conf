input {
  syslog {
    port => 1024
    syslog_field => "syslog"
  }
}
filter {
    # phase 1
    grok {
        match => {
           "message" => "<%{POSINT:priority}>[0-9]\s(?<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z)\s(?<agent_hostname>[^\s]+)\s(?<agent_application>[^\s]+)\s-\s(?<event_type>[^\s]+)\s\[%{DATA:reg1}\]\s(?<reg2>[^\n]+)"
        }
    }
    mutate {
       add_field => {"ksc_ipaddress" => "%{[host][ip]}"}
       add_field => {"log_type" => "%{[log]}"}
       gsub => [ "reg2", "\\r\\n", "@" ]
       remove_field => [ "event", "tags", "host", "@version", "syslog", "severity", "service", "log" ]
    }
    if [agent_application] =~ /KES/ {
       mutate {
         add_field => { "OS" => "Windows" }
       }
       grok {
         match => {
            "reg1" => "(?<entry>%{WORD})@(?<event_id>%{NUMBER})\s(?<reg3>[\s\S]*)"
         }
       }
       kv {
         source => "reg2"
         field_split => "@"
         value_split => ":"
       }
       kv {
         source => "reg3"
         field_split => " "
         value_split => "="
         trim_key => "\""
         trim_value => "\""
       }

    }
    if [agent_application] =~ /kesl/ {
       grok {
         match => {
            "reg1" => "(?<entry>%{WORD})@(?<event_id>%{NUMBER})\s(?<reg3>[\s\S]*)"
         }
       }
       kv {
         source => "reg2"
         field_split => ";"
         value_split => ":"
       }
       kv {
         source => "reg3"
         field_split => " "
         value_split => "="
         trim_key => "\""
         trim_value => "\""
       }
       mutate {
         add_field => { "OS" => "linux" }
         remove_field => [ "reg3", "reg1", "event" ]
       }
    }

    date {
       match => [ "timestamp", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'" ]
       timezone => "Asia/Kuala_Lumpur"
       target => "datetime"
    }
    mutate {
      convert => {
        "unique_entry" => "integer"
        "priority" => "integer"
        "event_id" => "integer"
      }
      rename => {"tdn" => "detection_name"}
      rename => {"etdn" => "event_description"}
      rename => {"hdn" => "host_hostname"}
      rename => {"hip" => "host_ip_address"}
      rename => {"gn" => "group_name"}
      rename => {"kscfqdn" => "ksc_server_fqdn"}
      remove_field => ["reg2" , "reg3"]
      gsub => [ "detection_name", "_", " " ]
    }
}
output {
#  stdout { codec => rubydebug }
## Forward To Create Index In Elasticsearch
  if [ksc_ipaddress] == "${Elasticsearch_IP}" {
    elasticsearch {
      hosts => ["https://${Elasticsearch_IP}:9200"]
      ssl_certificate_verification => false
      user => "${Username}"
      password => "${Password}"
      index => "ksc-%{[ksc_ipaddress]}-%{+YYYY.MM.dd}"
    }
  }
}
